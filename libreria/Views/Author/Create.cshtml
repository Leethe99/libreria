@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    bool isAdmin = User.IsInRole("Admin");
}

<<<<<<< Updated upstream
<h1>Crear Autor</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label" placeholder="Escribir Nombre">Nombre:</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label" placeholder="Escribir apellido">Apellido:</label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Volver a la lista</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
=======
<!DOCTYPE html>
<html>
<head>
    <title>Admin Button Example</title>
</head>
<body>
    <h1>Welcome to the Admin Section</h1>

    @if (isAdmin)
    {
        <button type="button" onclick="alert('Admin Button Clicked!')">Admin Only Button</button>
    }
    else
    {
        <p>You do not have admin privileges.</p>
    }
</body>
</html>
>>>>>>> Stashed changes
